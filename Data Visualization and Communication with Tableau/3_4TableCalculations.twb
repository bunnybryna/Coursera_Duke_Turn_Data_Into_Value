<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.0404.1406                               -->
<workbook original-version='10.4' source-build='10.5.3 (10500.18.0404.1406)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (3.price_parity)' inline='true' name='federated.1rmt5eu0rzjl321ahe8qb00sqhnn' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='3.price_parity' name='excel-direct.10g01o21kug8ai11netk80499j85'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Bryna/Documents/CS Magic World/Coursera Duke Turn Data Into Value/Data Visualization and Communication with Tableau/3.price_parity.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.10g01o21kug8ai11netk80499j85' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B52:no:A1:B52:0' header='yes' outcome='6'>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='real' name='Price Parity' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price Parity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Price Parity]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Price Parity</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B52:no:A1:B52:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.444915' measure-ordering='alphabetic' measure-percentage='0.555085' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (3.salary_data_states_corrected)' inline='true' name='federated.13v3tmv0i2wzwx0zvgspt0cbrhks' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='3.salary_data_states_corrected' name='excel-direct.1everbd0bhde8d1cqaotq0h38401'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Bryna/Documents/CS Magic World/Coursera Duke Turn Data Into Value/Data Visualization and Communication with Tableau/3.salary_data_states_corrected.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1everbd0bhde8d1cqaotq0h38401' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:AA10001:no:A1:AA2147483647:0' header='yes' outcome='2'>
            <column datatype='string' name='CASE_NUMBER' ordinal='0' />
            <column datatype='string' name='CASE_STATUS' ordinal='1' />
            <column datatype='date' date-parse-format='MM/dd/yyyy' name='CASE_RECEIVED_DATE' ordinal='2' />
            <column datatype='date' date-parse-format='MM/dd/yyyy' name='DECISION_DATE' ordinal='3' />
            <column datatype='string' name='EMPLOYER_NAME' ordinal='4' />
            <column datatype='string' name='PREVAILING_WAGE_SUBMITTED' ordinal='5' />
            <column datatype='string' name='PREVAILING_WAGE_SUBMITTED_UNIT' ordinal='6' />
            <column datatype='string' name='PAID_WAGE_SUBMITTED' ordinal='7' />
            <column datatype='string' name='PAID_WAGE_SUBMITTED_UNIT' ordinal='8' />
            <column datatype='string' name='JOB_TITLE' ordinal='9' />
            <column datatype='string' name='WORK_CITY' ordinal='10' />
            <column datatype='string' name='EDUCATION_LEVEL_REQUIRED' ordinal='11' />
            <column datatype='string' name='COLLEGE_MAJOR_REQUIRED' ordinal='12' />
            <column datatype='real' name='EXPERIENCE_REQUIRED_Y_N' ordinal='13' />
            <column datatype='real' name='EXPERIENCE_REQUIRED_NUM_MONTHS' ordinal='14' />
            <column datatype='string' name='COUNTRY_OF_CITIZENSHIP' ordinal='15' />
            <column datatype='string' name='PREVAILING_WAGE_SOC_CODE' ordinal='16' />
            <column datatype='string' name='PREVAILING_WAGE_SOC_TITLE' ordinal='17' />
            <column datatype='string' name='WORK_STATE' ordinal='18' />
            <column datatype='string' name='WORK_STATE_ABBREVIATION' ordinal='19' />
            <column datatype='string' name='WORK_POSTAL_CODE' ordinal='20' />
            <column datatype='string' name='FULL_TIME_POSITION_Y_N' ordinal='21' />
            <column datatype='string' name='VISA_CLASS' ordinal='22' />
            <column datatype='real' name='PREVAILING_WAGE_PER_YEAR' ordinal='23' />
            <column datatype='real' name='PAID_WAGE_PER_YEAR' ordinal='24' />
            <column datatype='string' name='JOB_TITLE_SUBGROUP' ordinal='25' />
            <column datatype='integer' name='order' ordinal='26' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AA10001:no:A1:AA2147483647:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CASE_NUMBER</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CASE_NUMBER]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CASE_NUMBER</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CASE_STATUS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CASE_STATUS]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CASE_STATUS</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CASE_RECEIVED_DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[CASE_RECEIVED_DATE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CASE_RECEIVED_DATE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DECISION_DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[DECISION_DATE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DECISION_DATE</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EMPLOYER_NAME</remote-name>
            <remote-type>130</remote-type>
            <local-name>[EMPLOYER_NAME]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>EMPLOYER_NAME</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PREVAILING_WAGE_SUBMITTED</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PREVAILING_WAGE_SUBMITTED]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PREVAILING_WAGE_SUBMITTED</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PREVAILING_WAGE_SUBMITTED_UNIT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PREVAILING_WAGE_SUBMITTED_UNIT]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PREVAILING_WAGE_SUBMITTED_UNIT</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAID_WAGE_SUBMITTED</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PAID_WAGE_SUBMITTED]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PAID_WAGE_SUBMITTED</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAID_WAGE_SUBMITTED_UNIT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PAID_WAGE_SUBMITTED_UNIT]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PAID_WAGE_SUBMITTED_UNIT</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>JOB_TITLE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[JOB_TITLE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>JOB_TITLE</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WORK_CITY</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WORK_CITY]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>WORK_CITY</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EDUCATION_LEVEL_REQUIRED</remote-name>
            <remote-type>130</remote-type>
            <local-name>[EDUCATION_LEVEL_REQUIRED]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>EDUCATION_LEVEL_REQUIRED</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COLLEGE_MAJOR_REQUIRED</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COLLEGE_MAJOR_REQUIRED]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>COLLEGE_MAJOR_REQUIRED</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EXPERIENCE_REQUIRED_Y_N</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EXPERIENCE_REQUIRED_Y_N]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>EXPERIENCE_REQUIRED_Y_N</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EXPERIENCE_REQUIRED_NUM_MONTHS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EXPERIENCE_REQUIRED_NUM_MONTHS]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>EXPERIENCE_REQUIRED_NUM_MONTHS</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY_OF_CITIZENSHIP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COUNTRY_OF_CITIZENSHIP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>COUNTRY_OF_CITIZENSHIP</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PREVAILING_WAGE_SOC_CODE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PREVAILING_WAGE_SOC_CODE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PREVAILING_WAGE_SOC_CODE</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PREVAILING_WAGE_SOC_TITLE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PREVAILING_WAGE_SOC_TITLE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PREVAILING_WAGE_SOC_TITLE</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WORK_STATE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WORK_STATE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>WORK_STATE</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WORK_STATE_ABBREVIATION</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WORK_STATE_ABBREVIATION]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>WORK_STATE_ABBREVIATION</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WORK_POSTAL_CODE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WORK_POSTAL_CODE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>WORK_POSTAL_CODE</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FULL_TIME_POSITION_Y_N</remote-name>
            <remote-type>130</remote-type>
            <local-name>[FULL_TIME_POSITION_Y_N]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>FULL_TIME_POSITION_Y_N</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VISA_CLASS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[VISA_CLASS]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>VISA_CLASS</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PREVAILING_WAGE_PER_YEAR</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PREVAILING_WAGE_PER_YEAR]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PREVAILING_WAGE_PER_YEAR</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PAID_WAGE_PER_YEAR</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PAID_WAGE_PER_YEAR]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PAID_WAGE_PER_YEAR</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>JOB_TITLE_SUBGROUP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[JOB_TITLE_SUBGROUP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>JOB_TITLE_SUBGROUP</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order</remote-name>
            <remote-type>20</remote-type>
            <local-name>[order]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>order</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Case Number' datatype='string' name='[CASE_NUMBER]' role='dimension' type='nominal' />
      <column caption='Case Received Date' datatype='date' name='[CASE_RECEIVED_DATE]' role='dimension' type='ordinal' />
      <column caption='Case Status' datatype='string' name='[CASE_STATUS]' role='dimension' type='nominal' />
      <column caption='College Major Required' datatype='string' name='[COLLEGE_MAJOR_REQUIRED]' role='dimension' type='nominal' />
      <column caption='Country Of Citizenship' datatype='string' name='[COUNTRY_OF_CITIZENSHIP]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Adjusted Paid Wage' datatype='real' name='[Calculation_1023443076335538176]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MEDIAN([PAID_WAGE_PER_YEAR])/ATTR([federated.1rmt5eu0rzjl321ahe8qb00sqhnn].[Price Parity]) * 100' />
      </column>
      <column caption='Rank' datatype='integer' name='[Calculation_600104707733512192]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX() &#13;&#10;// this is a comment'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='States We are Interested in' datatype='string' name='[Calculation_600104707736653825]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [WORK_STATE] = &apos;California&apos;&#13;&#10;OR [WORK_STATE] = &apos;Washington&apos;&#13;&#10;OR [WORK_STATE] = &apos;Texas&apos;&#13;&#10;OR [WORK_STATE] = &apos;Alabama&apos;&#13;&#10;OR [WORK_STATE] = &apos;North Carolina&apos;&#13;&#10;OR [WORK_STATE] = &apos;New York&apos;&#13;&#10;OR [WORK_STATE] = &apos;Massachusetts&apos;&#13;&#10;OR [WORK_STATE] = &apos;Maine&apos; &#13;&#10;THEN &apos;View&apos;&#13;&#10;ELSE &quot;Don&apos;t View&quot;&#13;&#10;END' />
      </column>
      <column aggregation='Median' caption='Difference Between Prevailing and Paid Wage' datatype='real' name='[Calculation_600104707750150146]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[PAID_WAGE_PER_YEAR]-[PREVAILING_WAGE_PER_YEAR]' />
      </column>
      <column caption='Paying Less than Prevailing Wage' datatype='string' name='[Calculation_600104707751952387]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_600104707750150146] &lt; 0&#13;&#10;THEN &apos;Paid Less than Prevailing Wage&apos;&#13;&#10;ELSE &apos;Paid Prevailing Wage or Higher&apos;&#13;&#10;END' />
      </column>
      <column caption='Decision Date' datatype='date' name='[DECISION_DATE]' role='dimension' type='ordinal' />
      <column caption='Education Level Required' datatype='string' name='[EDUCATION_LEVEL_REQUIRED]' role='dimension' type='nominal' />
      <column caption='Employer Name' datatype='string' name='[EMPLOYER_NAME]' role='dimension' type='nominal' />
      <column caption='Experience Required Num Months' datatype='real' name='[EXPERIENCE_REQUIRED_NUM_MONTHS]' role='dimension' type='ordinal' />
      <column caption='Experience Required Y N' datatype='real' name='[EXPERIENCE_REQUIRED_Y_N]' role='dimension' type='ordinal' />
      <column caption='Full Time Position Y N' datatype='string' name='[FULL_TIME_POSITION_Y_N]' role='dimension' type='nominal' />
      <column caption='Job Title' datatype='string' name='[JOB_TITLE]' role='dimension' type='nominal' />
      <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Median' caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Paid Wage Submitted' datatype='string' default-role='measure' default-type='quantitative' name='[PAID_WAGE_SUBMITTED]' role='dimension' type='nominal' />
      <column caption='Paid Wage Submitted Unit' datatype='string' name='[PAID_WAGE_SUBMITTED_UNIT]' role='dimension' type='nominal' />
      <column aggregation='Median' caption='Prevailing Wage Per Year' datatype='real' name='[PREVAILING_WAGE_PER_YEAR]' role='measure' type='quantitative' />
      <column caption='Prevailing Wage Soc Code' datatype='string' name='[PREVAILING_WAGE_SOC_CODE]' role='dimension' type='nominal' />
      <column caption='Prevailing Wage Soc Title' datatype='string' name='[PREVAILING_WAGE_SOC_TITLE]' role='dimension' type='nominal' />
      <column aggregation='CountD' caption='Prevailing Wage Submitted' datatype='string' default-role='measure' default-type='quantitative' name='[PREVAILING_WAGE_SUBMITTED]' role='dimension' type='nominal' />
      <column caption='Prevailing Wage Submitted Unit' datatype='string' name='[PREVAILING_WAGE_SUBMITTED_UNIT]' role='dimension' type='nominal' />
      <column caption='Visa Class' datatype='string' name='[VISA_CLASS]' role='dimension' type='nominal' />
      <column caption='Work City' datatype='string' name='[WORK_CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Work Postal Code' datatype='string' name='[WORK_POSTAL_CODE]' role='dimension' type='nominal' />
      <column caption='Work State' datatype='string' name='[WORK_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Work State Abbreviation' datatype='string' name='[WORK_STATE_ABBREVIATION]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Order' datatype='integer' name='[order]' role='measure' type='quantitative' />
      <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.55477' measure-ordering='alphabetic' measure-percentage='0.44523' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:JOB_TITLE_SUBGROUP:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;assistant professor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;data scientist&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;data analyst&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;software engineer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;business analyst&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;management consultant&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;attorney&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;teacher&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='federated.1rmt5eu0rzjl321ahe8qb00sqhnn'>
        <column datatype='real' name='[Price Parity]' role='measure' type='quantitative' />
      </datasource-dependencies>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='federated.13v3tmv0i2wzwx0zvgspt0cbrhks'>
      <column caption='Work State' datatype='string' name='[WORK_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[WORK_STATE]' derivation='None' name='[none:WORK_STATE:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1rmt5eu0rzjl321ahe8qb00sqhnn'>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-relationship source='federated.1rmt5eu0rzjl321ahe8qb00sqhnn' target='federated.13v3tmv0i2wzwx0zvgspt0cbrhks'>
      <column-mapping>
        <map key='[federated.1rmt5eu0rzjl321ahe8qb00sqhnn].[none:State:nk]' value='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:WORK_STATE:nk]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <worksheets>
    <worksheet name='Blending &amp; Aggregation'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (3.salary_data_states_corrected)' name='federated.13v3tmv0i2wzwx0zvgspt0cbrhks' />
            <datasource caption='Sheet1 (3.price_parity)' name='federated.1rmt5eu0rzjl321ahe8qb00sqhnn' />
          </datasources>
          <datasource-dependencies datasource='federated.13v3tmv0i2wzwx0zvgspt0cbrhks'>
            <column caption='Adjusted Paid Wage' datatype='real' name='[Calculation_1023443076335538176]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MEDIAN([PAID_WAGE_PER_YEAR])/ATTR([federated.1rmt5eu0rzjl321ahe8qb00sqhnn].[Price Parity]) * 100' />
            </column>
            <column caption='States We are Interested in' datatype='string' name='[Calculation_600104707736653825]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [WORK_STATE] = &apos;California&apos;&#13;&#10;OR [WORK_STATE] = &apos;Washington&apos;&#13;&#10;OR [WORK_STATE] = &apos;Texas&apos;&#13;&#10;OR [WORK_STATE] = &apos;Alabama&apos;&#13;&#10;OR [WORK_STATE] = &apos;North Carolina&apos;&#13;&#10;OR [WORK_STATE] = &apos;New York&apos;&#13;&#10;OR [WORK_STATE] = &apos;Massachusetts&apos;&#13;&#10;OR [WORK_STATE] = &apos;Maine&apos; &#13;&#10;THEN &apos;View&apos;&#13;&#10;ELSE &quot;Don&apos;t View&quot;&#13;&#10;END' />
            </column>
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column caption='Work State' datatype='string' name='[WORK_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Median' name='[med:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_600104707736653825]' derivation='None' name='[none:Calculation_600104707736653825:nk]' pivot='key' type='nominal' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1023443076335538176]' derivation='User' name='[usr:Calculation_1023443076335538176:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1rmt5eu0rzjl321ahe8qb00sqhnn'>
            <column datatype='real' name='[Price Parity]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[usr:Calculation_1023443076335538176:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[med:PAID_WAGE_PER_YEAR:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:Calculation_600104707736653825:nk]'>
            <groupfilter function='member' level='[none:Calculation_600104707736653825:nk]' member='&quot;View&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:Calculation_600104707736653825:nk]</column>
            <column>[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[usr:Calculation_1023443076335538176:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[:Measure Names]' />
              <size column='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[Multiple Values]</rows>
        <cols>([federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:JOB_TITLE_SUBGROUP:nk] / [federated.1rmt5eu0rzjl321ahe8qb00sqhnn].[none:State:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Box Plot'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (3.salary_data_states_corrected)' name='federated.13v3tmv0i2wzwx0zvgspt0cbrhks' />
          </datasources>
          <datasource-dependencies datasource='federated.13v3tmv0i2wzwx0zvgspt0cbrhks'>
            <column caption='Case Received Date' datatype='date' name='[CASE_RECEIVED_DATE]' role='dimension' type='ordinal' />
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Median' name='[med:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[CASE_RECEIVED_DATE]' derivation='Year' name='[yr:CASE_RECEIVED_DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:JOB_TITLE_SUBGROUP:nk]'>
            <groupfilter function='member' level='[none:JOB_TITLE_SUBGROUP:nk]' member='&quot;software engineer&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:JOB_TITLE_SUBGROUP:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[med:PAID_WAGE_PER_YEAR:qk]' field-type='quantitative' max='300000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[med:PAID_WAGE_PER_YEAR:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[med:PAID_WAGE_PER_YEAR:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[med:PAID_WAGE_PER_YEAR:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[med:PAID_WAGE_PER_YEAR:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[med:PAID_WAGE_PER_YEAR:qk]</rows>
        <cols>[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[yr:CASE_RECEIVED_DATE:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Dates as Dimensions or Measures'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (3.salary_data_states_corrected)' name='federated.13v3tmv0i2wzwx0zvgspt0cbrhks' />
          </datasources>
          <datasource-dependencies datasource='federated.13v3tmv0i2wzwx0zvgspt0cbrhks'>
            <column caption='Case Received Date' datatype='date' name='[CASE_RECEIVED_DATE]' role='dimension' type='ordinal' />
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Max' name='[max:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Median' name='[med:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Min' name='[min:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CASE_RECEIVED_DATE]' derivation='None' name='[none:CASE_RECEIVED_DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[CASE_RECEIVED_DATE]' derivation='Year' name='[yr:CASE_RECEIVED_DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:CASE_RECEIVED_DATE:qk]' included-values='in-range'>
            <min>#2009-01-01#</min>
            <max>#2015-06-29#</max>
          </filter>
          <slices>
            <column>[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:CASE_RECEIVED_DATE:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[max:PAID_WAGE_PER_YEAR:qk]' value='88' />
            <format attr='width' field='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[med:PAID_WAGE_PER_YEAR:qk]' value='88' />
            <format attr='width' field='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[min:PAID_WAGE_PER_YEAR:qk]' value='88' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[yr:CASE_RECEIVED_DATE:ok]' value='88' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:JOB_TITLE_SUBGROUP:nk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[max:PAID_WAGE_PER_YEAR:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:JOB_TITLE_SUBGROUP:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.14193369448184967' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[med:PAID_WAGE_PER_YEAR:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:JOB_TITLE_SUBGROUP:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='false' enabled='true' exclude-color='true' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.14193369448184967' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[min:PAID_WAGE_PER_YEAR:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:JOB_TITLE_SUBGROUP:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.14193369448184967' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[max:PAID_WAGE_PER_YEAR:qk] + ([federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[med:PAID_WAGE_PER_YEAR:qk] + [federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[min:PAID_WAGE_PER_YEAR:qk]))</rows>
        <cols>[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[yr:CASE_RECEIVED_DATE:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Median  Wage'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (3.salary_data_states_corrected)' name='federated.13v3tmv0i2wzwx0zvgspt0cbrhks' />
          </datasources>
          <datasource-dependencies datasource='federated.13v3tmv0i2wzwx0zvgspt0cbrhks'>
            <column caption='Decision Date' datatype='date' name='[DECISION_DATE]' role='dimension' type='ordinal' />
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Median' name='[med:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[DECISION_DATE]' derivation='Year' name='[yr:DECISION_DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:JOB_TITLE_SUBGROUP:nk]' direction='DESC' using='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[med:PAID_WAGE_PER_YEAR:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[med:PAID_WAGE_PER_YEAR:qk]</rows>
        <cols>([federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:JOB_TITLE_SUBGROUP:nk] / [federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[yr:DECISION_DATE:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Median  Wage Per Subgroup'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (3.salary_data_states_corrected)' name='federated.13v3tmv0i2wzwx0zvgspt0cbrhks' />
          </datasources>
          <datasource-dependencies datasource='federated.13v3tmv0i2wzwx0zvgspt0cbrhks'>
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Median' caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column aggregation='Median' caption='Prevailing Wage Per Year' datatype='real' name='[PREVAILING_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column caption='Visa Class' datatype='string' name='[VISA_CLASS]' role='dimension' type='nominal' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Median' name='[med:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[VISA_CLASS]' derivation='None' name='[none:VISA_CLASS:nk]' pivot='key' type='nominal' />
            <column-instance column='[PREVAILING_WAGE_PER_YEAR]' derivation='Stdev' name='[std:PREVAILING_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:JOB_TITLE_SUBGROUP:nk]' direction='DESC' using='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[med:PAID_WAGE_PER_YEAR:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:JOB_TITLE_SUBGROUP:nk]' value='145' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[sum:Number of Records:qk]' />
              <lod column='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[std:PREVAILING_WAGE_PER_YEAR:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
                <format attr='size' value='1.450276255607605' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[med:PAID_WAGE_PER_YEAR:qk]</rows>
        <cols>([federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:VISA_CLASS:nk] / [federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:JOB_TITLE_SUBGROUP:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Row Calculation'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (3.salary_data_states_corrected)' name='federated.13v3tmv0i2wzwx0zvgspt0cbrhks' />
          </datasources>
          <datasource-dependencies datasource='federated.13v3tmv0i2wzwx0zvgspt0cbrhks'>
            <column caption='States We are Interested in' datatype='string' name='[Calculation_600104707736653825]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [WORK_STATE] = &apos;California&apos;&#13;&#10;OR [WORK_STATE] = &apos;Washington&apos;&#13;&#10;OR [WORK_STATE] = &apos;Texas&apos;&#13;&#10;OR [WORK_STATE] = &apos;Alabama&apos;&#13;&#10;OR [WORK_STATE] = &apos;North Carolina&apos;&#13;&#10;OR [WORK_STATE] = &apos;New York&apos;&#13;&#10;OR [WORK_STATE] = &apos;Massachusetts&apos;&#13;&#10;OR [WORK_STATE] = &apos;Maine&apos; &#13;&#10;THEN &apos;View&apos;&#13;&#10;ELSE &quot;Don&apos;t View&quot;&#13;&#10;END' />
            </column>
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column caption='Work State' datatype='string' name='[WORK_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[PAID_WAGE_PER_YEAR]' derivation='Median' name='[med:PAID_WAGE_PER_YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_600104707736653825]' derivation='None' name='[none:Calculation_600104707736653825:nk]' pivot='key' type='nominal' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
            <column-instance column='[WORK_STATE]' derivation='None' name='[none:WORK_STATE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:Calculation_600104707736653825:nk]'>
            <groupfilter function='member' level='[none:Calculation_600104707736653825:nk]' member='&quot;View&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:WORK_STATE:nk]' direction='DESC' using='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[med:PAID_WAGE_PER_YEAR:qk]' />
          <slices>
            <column>[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:Calculation_600104707736653825:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:WORK_STATE:nk]' value='122' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:JOB_TITLE_SUBGROUP:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='536' />
                <format attr='maxheight' value='536' />
                <format attr='minwidth' value='160' />
                <format attr='maxwidth' value='160' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[med:PAID_WAGE_PER_YEAR:qk]</rows>
        <cols>([federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:JOB_TITLE_SUBGROUP:nk] / [federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:WORK_STATE:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Table Calculation'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Tree'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (3.salary_data_states_corrected)' name='federated.13v3tmv0i2wzwx0zvgspt0cbrhks' />
          </datasources>
          <datasource-dependencies datasource='federated.13v3tmv0i2wzwx0zvgspt0cbrhks'>
            <column aggregation='Median' caption='Difference Between Prevailing and Paid Wage' datatype='real' name='[Calculation_600104707750150146]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[PAID_WAGE_PER_YEAR]-[PREVAILING_WAGE_PER_YEAR]' />
            </column>
            <column caption='Paying Less than Prevailing Wage' datatype='string' name='[Calculation_600104707751952387]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_600104707750150146] &lt; 0&#13;&#10;THEN &apos;Paid Less than Prevailing Wage&apos;&#13;&#10;ELSE &apos;Paid Prevailing Wage or Higher&apos;&#13;&#10;END' />
            </column>
            <column caption='Employer Name' datatype='string' name='[EMPLOYER_NAME]' role='dimension' type='nominal' />
            <column caption='Job Title Subgroup' datatype='string' name='[JOB_TITLE_SUBGROUP]' role='dimension' type='nominal' />
            <column aggregation='Median' caption='Paid Wage Per Year' datatype='real' name='[PAID_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column aggregation='Median' caption='Prevailing Wage Per Year' datatype='real' name='[PREVAILING_WAGE_PER_YEAR]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_600104707750150146]' derivation='Count' name='[cnt:Calculation_600104707750150146:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_600104707751952387]' derivation='None' name='[none:Calculation_600104707751952387:nk]' pivot='key' type='nominal' />
            <column-instance column='[EMPLOYER_NAME]' derivation='None' name='[none:EMPLOYER_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[JOB_TITLE_SUBGROUP]' derivation='None' name='[none:JOB_TITLE_SUBGROUP:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[cnt:Calculation_600104707750150146:qk]' included-values='in-range'>
            <min>5</min>
          </filter>
          <filter class='categorical' column='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:Calculation_600104707751952387:nk]'>
            <groupfilter function='member' level='[none:Calculation_600104707751952387:nk]' member='&quot;Paid Less than Prevailing Wage&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:JOB_TITLE_SUBGROUP:nk]'>
            <groupfilter function='level-members' level='[none:JOB_TITLE_SUBGROUP:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:Calculation_600104707751952387:nk]</column>
            <column>[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:JOB_TITLE_SUBGROUP:nk]</column>
            <column>[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[cnt:Calculation_600104707750150146:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[cnt:Calculation_600104707750150146:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[cnt:Calculation_600104707750150146:qk]' />
              <color column='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[cnt:Calculation_600104707750150146:qk]' />
              <text column='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:JOB_TITLE_SUBGROUP:nk]' />
              <text column='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:EMPLOYER_NAME:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' name='Median  Wage'>
      <cards>
        <edge name='left'>
          <strip size='250'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='39'>
            <card type='columns' />
          </strip>
          <strip size='39'>
            <card type='rows' />
          </strip>
          <strip size='47'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Median  Wage Per Subgroup'>
      <cards>
        <edge name='left'>
          <strip size='182'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='39'>
            <card type='columns' />
          </strip>
          <strip size='39'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:JOB_TITLE_SUBGROUP:nk]</field>
            <field>[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:VISA_CLASS:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Dates as Dimensions or Measures'>
      <cards>
        <edge name='left'>
          <strip size='267'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:CASE_RECEIVED_DATE:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:JOB_TITLE_SUBGROUP:nk]' type='color' />
            <card param='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:JOB_TITLE_SUBGROUP:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:CASE_RECEIVED_DATE:nk]</field>
            <field>[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:CASE_RECEIVED_DATE:qk]</field>
            <field>[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:JOB_TITLE_SUBGROUP:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Box Plot'>
      <cards>
        <edge name='left'>
          <strip size='250'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='47'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='250'>
            <card param='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:JOB_TITLE_SUBGROUP:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:JOB_TITLE_SUBGROUP:nk]</field>
            <field>[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[yr:CASE_RECEIVED_DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Row Calculation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:JOB_TITLE_SUBGROUP:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:Calculation_600104707736653825:nk]</field>
            <field>[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:JOB_TITLE_SUBGROUP:nk]</field>
            <field>[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:WORK_STATE:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Tree'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:JOB_TITLE_SUBGROUP:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[cnt:Calculation_600104707750150146:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:Calculation_600104707751952387:nk]</field>
            <field>[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:EMPLOYER_NAME:nk]</field>
            <field>[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:JOB_TITLE_SUBGROUP:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Blending &amp; Aggregation'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='1' param='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[:Measure Names]' type='color' />
            <card pane-specification-id='1' param='[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[:Measure Names]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[:Measure Names]</field>
            <field>[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:Calculation_600104707736653825:nk]</field>
            <field>[federated.13v3tmv0i2wzwx0zvgspt0cbrhks].[none:JOB_TITLE_SUBGROUP:nk]</field>
            <field>[federated.1rmt5eu0rzjl321ahe8qb00sqhnn].[:Measure Names]</field>
            <field>[federated.1rmt5eu0rzjl321ahe8qb00sqhnn].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Table Calculation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Blending &amp; Aggregation' width='192'>
      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
      Oie9fv5/gofnxAO/kqQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dates as Dimensions or Measures' width='192'>
      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
      wvtwji+KKg1ieLc8iPrDyJZG6JHRSXpCJl/7yu/x3AtvHmiHvB6DX/n5kzx5rn9f2ndTKdRP
      XsBdWdmX9vcT6bosf/nLZL/zN/vS/vTaKv/huW+ymM/vS/urL7zAzJe/jGvvzyYrJ5vFKRZ3
      dc2WCnBr6gozSxnOPPoU50/s7qT3vdJwHH50+SJXFhf2pX1rfIy+3/znWJO7yRncOdXVVdZe
      eWV/Ev80jVvPfpLs6f3ZzHNkOcWXvv4cyWxuX9q383nc1Oq+fDaubbP4f/wWS7/7/+w9F8jj
      9eC6Dmury4ST/fQlI23r6L3wNJv84nPfJfxJF461vzqB0DT06Ptzm9pF5jvfpfHd7xH8l/8C
      X6y9C0lNCD7ykY+yX4sA/8Qk3f/FP8Iz0H4PE0D/5z+P/Oxn0c32e5iEYVD96Wcx/btLt94y
      DuC6bluToXa1IcZ1qXz/eazJSazhobb1YYO6bfPG8iLn+47g24cvolEqUV1NER0bPxT5Lh22
      Z9s4wOzVN/jxG1fxei1Gjj/G42cmDq5Tuk7wp57dt/ZT5RLfnLpKbzDEaLz97l1PKIQn1P4F
      aof9YdtI8He+9Q1Onj7B1K0sn/zIY9u3oBS3Z2/gaH6GemPMLWcYGeih4WrYjSrhcBjbtg9N
      NqhUilytSsznR+uM0A81d60O/czTT7KcyvP4hXN3bUShmJ9fIh6PcXN6lq4gzNxeZH5hnuV0
      8dDVg9eEIOEPdIS/A7DNIvjG5TeYnVvk9sISjhHkybN385gIHn/qKa5cvoo34CcYDrKQWmUp
      tcSJs4+h7sh/6RyS1wbqDdB1uI+gz46QEnaZorFjlGo99qv9+2DLT3Hy1CMsLC6iqSbV6j2K
      GMkm0zduYgXCJMMWb11dYHxsiK6BAcq5NUQy/K5cmg89tToUStCTbP/sJyX8+DXo64bTx9vb
      NkA622r/E0/tS6CN69Mwvwif+khLiduJUpDLg25AOLjjz35biewbmsBu1AjcI6QvdA8nT7+T
      VtzVNwhACOiKHsLNNFJCNg/x6P6MRNduwtUb8IufB2+bc4GEgJOT4N+fKDaGDn5f+4VzA8sE
      n499ceNKBT96tdX/T39kx5dtuQi+/uZPuDg1w6kLn+Lk6N5ruByqLZEra/Dc9+Gzn4C+fdj4
      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
      IIQQ/wtrfvRNYALc4wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Median  Wage' width='192'>
      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
      PzwhphzXJ97RAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Median  Wage Per Subgroup' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Row Calculation' width='192'>
      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
      UGnITnpfAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Table Calculation' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Tree' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
